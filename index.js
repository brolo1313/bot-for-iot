const TOKEN = process.env.TELEGRAM_TOKEN || "YOUR_TELEGRAM_BOT_TOKEN";
const port = process.env.PORT || 3000;

const TelegramBot = require("node-telegram-bot-api");
const express = require("express");

const bot = new TelegramBot(TOKEN, { polling: true });

const app = express();

app.use(express.json());

const accessAllow = [
  { isAdmin: true, name: "Andrew", id: 848048961 },
  { isAdmin: false, name: "Yaroslava", id: 123456789 },
];

app.listen(port, () => {
  console.log(`Express server is listening on ${port}`);
});

//BOT LOGIC
bot.on("message", (msg) => {
  const isHasAccess = accessAllow.find((item) => item.id === msg.from.id);
  if (!isHasAccess) {
    bot.sendMessage(msg.chat.id, `‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ!</b>`, {
      parse_mode: "HTML",
    });

    bot.sendMessage(
      848048961,
      `‚ö†Ô∏è <b>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${msg.from.first_name} - ${msg.from.username} –Ω–∞–º–∞–≥–∞–≤—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø</b>`,
      {
        parse_mode: "HTML",
      }
    );
    return;
  }
  sendStartMessage(msg);
});

bot.on("callback_query", (query) => {
  const chatId = query.message.chat.id;
  const data = query.data;

  console.log("query", query);
  if (data === "air_on") {
    bot.sendMessage(chatId, "‚úÖ AIR —É–≤—ñ–º–∫–Ω–µ–Ω–æ");
  } else if (data === "air_off") {
    bot.sendMessage(chatId, "‚õî AIR –≤–∏–º–∫–Ω–µ–Ω–æ");
  }

  bot.answerCallbackQuery(query.id);
});

function sendStartMessage(msg) {
  bot.sendMessage(msg.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:", {
    reply_markup: {
      inline_keyboard: [
        [
          { text: "üü¢ –£–≤—ñ–º–∫–Ω—É—Ç–∏ AIR", callback_data: "air_on" },
          { text: "üî¥ –í–∏–º–∫–Ω—É—Ç–∏ AIR", callback_data: "air_off" },
        ],
      ],
    },
  });
}
